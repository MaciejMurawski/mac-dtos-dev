parameters:
  - name: service_connection
    displayName: Environment Service Connection
    type: string
    default: sp-mac-dtos
  - name: environment
    displayName: Environment
    type: string
    default: dev

trigger: none

variables:
  - group: dtos_dev_variables

pool:
  vmImage: ubuntu-latest

# - script: echo Hello, world!
#   displayName: 'Run a one-line script'
# 
# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

stages:
  - stage: validate
    jobs:
    - job: validate
      continueOnError: false
      steps:
        - task: TerraformTaskV4@4
          continueOnError: false
          displayName: TerraformInit
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure'
            backendAzureRmUseEnvironmentVariablesForAuthentication: false
            backendServiceArm: 'sp-mac-dtos'
            backendAzureRmResourceGroupName: 'rg-dtos-state'
            backendAzureRmStorageAccountName: 'samacdtosdevstate'
            backendAzureRmContainerName: 'tfstate'
            backendAzureRmKey: 'dev.dtos.tfstate'

        - task: TerraformTaskV4@4
          continueOnError: false
          displayName: TerraformPlan - ${{ parameters.environment }} Environment
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure'
            commandOptions: '-var-file=environments/dev.tfvars.config'
            environmentServiceNameAzureRM: 'sp-mac-dtos'